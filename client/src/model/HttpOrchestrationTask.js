/**
 * configapi
 * Config API lets you easily manage configuration at scale.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/HttpFormDataParameter', 'model/HttpGetParameter', 'model/HttpOrchestrationHeader', 'model/HttpRawBinaryParameter', 'model/HttpRawTextParameter', 'model/HttpWwwFormUrlEncodedParameter'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./HttpFormDataParameter'), require('./HttpGetParameter'), require('./HttpOrchestrationHeader'), require('./HttpRawBinaryParameter'), require('./HttpRawTextParameter'), require('./HttpWwwFormUrlEncodedParameter'));
  } else {
    // Browser globals (root is window)
    if (!root.CloudmersiveConfigurationApiClient) {
      root.CloudmersiveConfigurationApiClient = {};
    }
    root.CloudmersiveConfigurationApiClient.HttpOrchestrationTask = factory(root.CloudmersiveConfigurationApiClient.ApiClient, root.CloudmersiveConfigurationApiClient.HttpFormDataParameter, root.CloudmersiveConfigurationApiClient.HttpGetParameter, root.CloudmersiveConfigurationApiClient.HttpOrchestrationHeader, root.CloudmersiveConfigurationApiClient.HttpRawBinaryParameter, root.CloudmersiveConfigurationApiClient.HttpRawTextParameter, root.CloudmersiveConfigurationApiClient.HttpWwwFormUrlEncodedParameter);
  }
}(this, function(ApiClient, HttpFormDataParameter, HttpGetParameter, HttpOrchestrationHeader, HttpRawBinaryParameter, HttpRawTextParameter, HttpWwwFormUrlEncodedParameter) {
  'use strict';




  /**
   * The HttpOrchestrationTask model module.
   * @module model/HttpOrchestrationTask
   * @version 2.4.3
   */

  /**
   * Constructs a new <code>HttpOrchestrationTask</code>.
   * @alias module:model/HttpOrchestrationTask
   * @class
   */
  var exports = function() {
    var _this = this;










  };

  /**
   * Constructs a <code>HttpOrchestrationTask</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/HttpOrchestrationTask} obj Optional instance to populate.
   * @return {module:model/HttpOrchestrationTask} The populated <code>HttpOrchestrationTask</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('TaskName')) {
        obj['TaskName'] = ApiClient.convertToType(data['TaskName'], 'String');
      }
      if (data.hasOwnProperty('HttpMethod')) {
        obj['HttpMethod'] = ApiClient.convertToType(data['HttpMethod'], 'String');
      }
      if (data.hasOwnProperty('URL')) {
        obj['URL'] = ApiClient.convertToType(data['URL'], 'String');
      }
      if (data.hasOwnProperty('HttpHeaders')) {
        obj['HttpHeaders'] = ApiClient.convertToType(data['HttpHeaders'], [HttpOrchestrationHeader]);
      }
      if (data.hasOwnProperty('QueryParameters')) {
        obj['QueryParameters'] = ApiClient.convertToType(data['QueryParameters'], [HttpGetParameter]);
      }
      if (data.hasOwnProperty('FormDataParameters')) {
        obj['FormDataParameters'] = ApiClient.convertToType(data['FormDataParameters'], [HttpFormDataParameter]);
      }
      if (data.hasOwnProperty('WwwFormUrlEncodedParameters')) {
        obj['WwwFormUrlEncodedParameters'] = ApiClient.convertToType(data['WwwFormUrlEncodedParameters'], [HttpWwwFormUrlEncodedParameter]);
      }
      if (data.hasOwnProperty('RawTextBody')) {
        obj['RawTextBody'] = HttpRawTextParameter.constructFromObject(data['RawTextBody']);
      }
      if (data.hasOwnProperty('RawBinaryBody')) {
        obj['RawBinaryBody'] = HttpRawBinaryParameter.constructFromObject(data['RawBinaryBody']);
      }
    }
    return obj;
  }

  /**
   * An identifier for this task name, e.g. CreateCustomer or ScanForVirus; allows you to refer to this task from other tasks; if not supplied, it will default to a 0-based integer index of the task
   * @member {String} TaskName
   */
  exports.prototype['TaskName'] = undefined;
  /**
   * HTTP Method, e.g. GET, PUT, POST, etc.
   * @member {String} HttpMethod
   */
  exports.prototype['HttpMethod'] = undefined;
  /**
   * HTTP URL to orchestrate
   * @member {String} URL
   */
  exports.prototype['URL'] = undefined;
  /**
   * Optional; HTTP headers to apply to the request
   * @member {Array.<module:model/HttpOrchestrationHeader>} HttpHeaders
   */
  exports.prototype['HttpHeaders'] = undefined;
  /**
   * Optional; query parameters, these query parameters will be incorporated into the URL
   * @member {Array.<module:model/HttpGetParameter>} QueryParameters
   */
  exports.prototype['QueryParameters'] = undefined;
  /**
   * Optional; FormData parameters, these parameters will be stored in the body in a multi-part encoding
   * @member {Array.<module:model/HttpFormDataParameter>} FormDataParameters
   */
  exports.prototype['FormDataParameters'] = undefined;
  /**
   * Optional; x-www-form-urlencoded paramereters, these parameters will be stored in the body as an application/x-www-form-urlencoded encoding
   * @member {Array.<module:model/HttpWwwFormUrlEncodedParameter>} WwwFormUrlEncodedParameters
   */
  exports.prototype['WwwFormUrlEncodedParameters'] = undefined;
  /**
   * Optional; sets the body of the request as raw text, cannot be used with other parameter types in the same request
   * @member {module:model/HttpRawTextParameter} RawTextBody
   */
  exports.prototype['RawTextBody'] = undefined;
  /**
   * Optional; set the body of the request as binary, cannot be used with other parameter types in the same request
   * @member {module:model/HttpRawBinaryParameter} RawBinaryBody
   */
  exports.prototype['RawBinaryBody'] = undefined;



  return exports;
}));


